[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]
build-backend = "setuptools.build_meta"


[tool.setuptools_scm]
write_to = "src/optimagic/_version.py"


[tool.ruff]
target-version = "py37"
fix = true

select = [
  # pyflakes
  "F",
  # pycodestyle
  "E",
  "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # pylint
  "PLE", "PLR", "PLW",
  # misc lints
  "PIE",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
]

extend-ignore = [

  # allow module import not at top of file, important for notebooks
  "E402",
  # do not assign a lambda expression, use a def
  "E731",
  # Too many arguments to function call
  "PLR0913",
  # Too many returns
  "PLR0911",
  # Too many branches
  "PLR0912",
  # Too many statements
  "PLR0915",
  # Magic number
  "PLR2004",
  # Consider `elif` instead of `else` then `if` to remove indentation level
  "PLR5501",
  # For calls to warnings.warn(): No explicit `stacklevel` keyword argument found
  "B028",
]

[tool.ruff.per-file-ignores]
"docs/source/conf.py" = ["E501", "ERA001", "DTZ005"]
"src/optimagic/parameters/kernel_transformations.py" = ["ARG001", "N806"]
"docs/source/*" = ["B018"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.nbqa.config]
black = "pyproject.toml"

[tool.nbqa.mutate]
black = 1

[tool.pytask]
infer_latex_dependencies = true


[tool.pytest.ini_options]
filterwarnings = [
    "ignore:Using or importing the ABCs from 'collections'",
    "ignore:the imp module is deprecated",
    "ignore:Method .ptp is deprecated and will be removed in a future version. Use numpy.ptp instead.",
    "ignore:In a future version of pandas all arguments of concat except for the argument 'objs' will be keyword-only",
    "ignore:Please use `MemoizeJac` from the `scipy.optimize` namespace",
    "ignore:`scipy.optimize.optimize.MemoizeJac` is deprecated",
    "ignore:Some algorithms did not converge. Their walltime has been set to a very high value instead of infinity because Timedeltas do notsupport infinite values",
    "ignore:In a future version, the Index constructor will not infer numeric dtypes when passed object-dtype sequences",
    "ignore:distutils Version classes are deprecated. Use packaging.version instead",
    "ignore:Standard matrix inversion failed due to LinAlgError",
    "ignore:delta_grad == 0.0",
    "ignore:Widget._active_widgets is deprecated",
    "ignore:Widget._widget_types is deprecated",
    "ignore:Widget.widget_types is deprecated",
    "ignore:Widget.widgets is deprecated",
    "ignore:Parallelization together with",
    "ignore:Conversion of an array with ndim > 0 to a scalar is deprecated",
]
addopts = ["--doctest-modules"]
markers = [
    "wip: Tests that are work-in-progress.",
    "slow: Tests that take a long time to run and are skipped in continuous integration.",
    "jax: Tests that require jax to be installed and are skipped on non-Linux systems.",
]
norecursedirs = ["docs", ".envs"]


[tool.yamlfix]
line_length = 88
sequence_style = "block_style"
none_representation = "null"


[tool.mypy]
files = ["src", "tests"]
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "optimagic.benchmarking",
    "optimagic.benchmarking.benchmark_reports",
    "optimagic.benchmarking.cartis_roberts",
    "optimagic.benchmarking.get_benchmark_problems",
    "optimagic.benchmarking.more_wild",
    "optimagic.benchmarking.noise_distributions",
    "optimagic.benchmarking.process_benchmark_results",
    "optimagic.benchmarking.run_benchmark",

    "optimagic.differentiation",
    "optimagic.differentiation.derivatives",
    "optimagic.differentiation.finite_differences",
    "optimagic.differentiation.generate_steps",
    "optimagic.differentiation.richardson_extrapolation",

    "estimagic.estimation",
    "estimagic.estimation.estimate_ml",
    "estimagic.estimation.estimate_msm",
    "estimagic.estimation.estimation_summaries",
    "estimagic.estimation.msm_weighting",

    "optimagic.examples",
    "optimagic.examples.criterion_functions",
    "optimagic.examples.numdiff_functions",
    "estimagic.examples",
    "estimagic.examples.logit",

    "estimagic.inference",
    "estimagic.inference.bootstrap_ci",
    "estimagic.inference.bootstrap_helpers",
    "estimagic.inference.bootstrap_outcomes",
    "estimagic.inference.bootstrap_samples",
    "estimagic.inference.bootstrap",
    "estimagic.inference.ml_covs",
    "estimagic.inference.msm_covs",
    "estimagic.inference.shared",

    "optimagic.logging",
    "optimagic.logging.create_tables",
    "optimagic.logging.load_database",
    "optimagic.logging.read_from_database",
    "optimagic.logging.read_log",
    "optimagic.logging.write_to_database",

    "optimagic.optimization",
    "optimagic.optimization.subsolvers",
    "optimagic.optimization.subsolvers._conjugate_gradient",
    "optimagic.optimization.subsolvers._steihaug_toint",
    "optimagic.optimization.subsolvers._trsbox",
    "optimagic.optimization.subsolvers.bntr",
    "optimagic.optimization.subsolvers.gqtpar",
    "optimagic.optimization.subsolvers.linear_subsolvers",
    "optimagic.optimization.algo_options",
    "optimagic.optimization.bhhh",
    "optimagic.optimization.check_arguments",
    "optimagic.optimization.convergence_report",
    "optimagic.optimization.cyipopt_optimizers",
    "optimagic.optimization.error_penalty",
    "optimagic.optimization.fides_optimizers",
    "optimagic.optimization.get_algorithm",
    "optimagic.optimization.history_tools",
    "optimagic.optimization.internal_criterion_template",
    "optimagic.optimization.nag_optimizers",
    "optimagic.optimization.neldermead",
    "optimagic.optimization.nlopt_optimizers",
    "optimagic.optimization.optimization_logging",
    "optimagic.optimization.optimize_result",
    "optimagic.optimization.optimize",
    "optimagic.optimization.pounders_auxiliary",
    "optimagic.optimization.pounders_history",
    "optimagic.optimization.pounders",
    "optimagic.optimization.process_multistart_sample",
    "optimagic.optimization.process_results",
    "optimagic.optimization.pygmo_optimizers",
    "optimagic.optimization.scipy_optimizers",
    "optimagic.optimization.tao_optimizers",
    "optimagic.optimization.tiktak",
    "optimagic.optimization.tranquilo",

    "optimagic.parameters",
    "optimagic.parameters.block_trees",
    "optimagic.parameters.check_constraints",
    "optimagic.parameters.consolidate_constraints",
    "optimagic.parameters.constraint_tools",
    "optimagic.parameters.conversion",
    "optimagic.parameters.kernel_transformations",
    "optimagic.parameters.nonlinear_constraints",
    "optimagic.parameters.parameter_bounds",
    "optimagic.parameters.parameter_groups",
    "optimagic.parameters.process_constraints",
    "optimagic.parameters.process_selectors",
    "optimagic.parameters.scale_conversion",
    "optimagic.parameters.space_conversion",
    "optimagic.parameters.tree_conversion",
    "optimagic.parameters.tree_registry",

    "estimagic.sensitivity",
    "estimagic.sensitivity.msm_sensitivity",

    "optimagic.shared",
    "optimagic.shared.check_option_dicts",

    "optimagic.visualization",
    "optimagic.visualization.convergence_plot",
    "optimagic.visualization.deviation_plot",
    "optimagic.visualization.history_plots",
    "optimagic.visualization.plotting_utilities",
    "optimagic.visualization.profile_plot",
    "optimagic.visualization.slice_plot",
    "estimagic.visualization",
    "estimagic.visualization.estimation_table",
    "estimagic.visualization.lollipop_plot",

    "optimagic",
    "optimagic.batch_evaluators",
    "optimagic.cli",
    "optimagic.compat",
    "optimagic.decorators",
    "optimagic.exceptions",
    "optimagic.process_user_function",
    "optimagic.utilities",
]
check_untyped_defs = false
disallow_any_generics = false
disallow_untyped_defs = false


[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
ignore_errors = true

[[tool.mypy.overrides]]
module = [
    "pybaum",
    "scipy",
    "scipy.linalg",
    "scipy.linalg.lapack",
    "scipy.stats",
    "scipy.optimize",
    "scipy.ndimage",
    "scipy.optimize._trustregion_exact",
    "plotly",
    "plotly.graph_objects",
    "plotly.express",
    "plotly.subplots",
    "cyipopt",
    "nlopt",
    "bokeh",
    "bokeh.layouts",
    "bokeh.models",
    "bokeh.plotting",
    "bokeh.application",
    "bokeh.application.handlers",
    "bokeh.application.handlers.function",
    "bokeh.server",
    "bokeh.server.server",
    "bokeh.command",
    "bokeh.command.util",
    "fides",
    "petsc4py",
    "tranquilo",
    "tranquilo.tranquilo",
    "dfols",
    "pybobyqa",
    "pygmo",
    "jax",
    "joblib",
    "cloudpickle",
    "numba",
    "pathos",
    "pathos.pools",
    "optimagic._version",
  ]
ignore_missing_imports = true
